// Generated by CoffeeScript 1.7.1
(function() {
  var $cr, $crText, $dr, $drText, $manualPostBatch, $manualPostChker, $manualPostForm, $manualPostNarr, $postInfoDisplay, $submitBtn, absNetAmtFormatted, acctIsValid, checkAndEnableSubmitBtn, crAcct, drAcct, ids, isValidManualNarr, manualPostChkBoxesValid, netAmt, okToPost, rows, selectionSummary, setAcctInfoDisplay, setAcctOnDecPpty, _ref;
  acctIsValid = false;
  _ref = selectedClirecsEnum(), rows = _ref.rows, ids = _ref.ids, netAmt = _ref.netAmt, absNetAmtFormatted = _ref.absNetAmtFormatted, selectionSummary = _ref.selectionSummary;
  $('#id_clirec_ids').val(ids.join(','));
  $("#id_manual_post_amount").val(Math.abs(netAmt));
  drAcct = '';
  crAcct = '';
  $dr = $('#id_dr_acct');
  $cr = $('#id_cr_acct');
  $drText = $('#id_dr_acct_text');
  $crText = $('#id_cr_acct_text');
  $manualPostForm = $('#clirec-modal-manual-posting-form');
  $manualPostNarr = $('#id_manual_post_narration');
  $manualPostBatch = $('#id_manual_post_batch_no');
  $submitBtn = $('#create-manual-post-btn');
  $manualPostChker = $('#id_create_manual_post');
  if (netAmt < 0) {
    $crText.val(clirecUploadUtils.nostroObj.ledger_acct.number).prop('readonly', true).addClass('nostro-ledger');
    $cr.val(clirecUploadUtils.nostroObj.ledger_acct.id);
    $drText.removeClass('nostro-ledger');
    $dr.val('');
    crAcct = clirecUploadUtils.nostroObj.ledger_acct.number;
  } else {
    $drText.val(clirecUploadUtils.nostroObj.ledger_acct.number).prop('readonly', true).addClass('nostro-ledger');
    $dr.val(clirecUploadUtils.nostroObj.ledger_acct.id);
    $crText.removeClass('nostro-ledger');
    $cr.val('');
    drAcct = clirecUploadUtils.nostroObj.ledger_acct.number;
  }
  $postInfoDisplay = $('#id_posting_enum').val(_.template("<%=selectionSummary%>\n\n%tab%DR%tab%<%-drAcct%>%tab%<%-absNetAmtFormatted%>\n%tab%CR%tab%<%-crAcct%>%tab%<%-absNetAmtFormatted%>\n%tab%NARRATION:\n\n%tab%%tab%BATCH", {
    selectionSummary: selectionSummary,
    absNetAmtFormatted: absNetAmtFormatted,
    drAcct: drAcct,
    crAcct: crAcct
  }).replace(/%tab%/g, '\t'));
  setAcctInfoDisplay = function(drCr, newVal) {
    var val;
    val = $postInfoDisplay.val();
    if (drCr === 'D') {
      return $postInfoDisplay.val(val.replace(new RegExp("\tDR\t.*\t" + absNetAmtFormatted), "\tDR\t" + newVal + "\t" + absNetAmtFormatted));
    } else {
      return $postInfoDisplay.val(val.replace(new RegExp("\tCR\t.*\t" + absNetAmtFormatted), "\tCR\t" + newVal + "\t" + absNetAmtFormatted));
    }
  };
  setAcctOnDecPpty = function($el) {
    var flag, notation;
    if ($el.prop('id').indexOf('id_dr_acct') !== -1) {
      notation = 'Debit';
      flag = 'D';
    } else {
      notation = 'Credit';
      flag = 'C';
    }
    return {
      notation: notation,
      flag: flag
    };
  };
  isValidManualNarr = function() {
    if ($manualPostChker.prop('checked')) {
      if (!/^\d{4}$/.test($manualPostBatch.val()) || $manualPostNarr.val().length < 3) {
        return false;
      }
    }
    return true;
  };
  checkAndEnableSubmitBtn = function() {
    var idRegexp, numManualChkers;
    idRegexp = /^\d+$/;
    numManualChkers = $manualPostForm.find('input[type=checkbox]:checked').size();
    if (idRegexp.test($cr.val()) && idRegexp.test($dr.val()) && numManualChkers >= 1 && isValidManualNarr()) {
      return $submitBtn.prop('disabled', false);
    } else {
      return $submitBtn.prop('disabled', true);
    }
  };
  $manualPostForm.on({
    'killed': function(evt) {
      var flag;
      flag = setAcctOnDecPpty($(this)).flag;
      setAcctInfoDisplay(flag, '');
      checkAndEnableSubmitBtn();
      return acctIsValid = false;
    },
    'added': function(evt, pk, uiItem) {
      var $el, contraAcct, flag, notation, _ref1;
      $el = $(this);
      _ref1 = setAcctOnDecPpty($el), notation = _ref1.notation, flag = _ref1.flag;
      contraAcct = uiItem.label;
      if (contraAcct === clirecUploadUtils.nostroObj.ledger_acct.number || !new RegExp(clirecUploadUtils.nostroObj.ccy).test(contraAcct)) {
        window.alert("Wrong " + notation + " Account.\nPlease select a valid ledger account.");
        $el.children().remove();
        return $el.trigger('killed');
      }
      setAcctInfoDisplay(flag, contraAcct);
      checkAndEnableSubmitBtn();
      return acctIsValid = true;
    }
  }, 'div[id$=_on_deck]');
  $manualPostForm.on({
    'change': function(evt) {
      if (this === $manualPostBatch[0] && $manualPostBatch.val()) {
        $postInfoDisplay.val(function(index, oldVal) {
          return oldVal.replace(/\t\tBATCH\s*\d*\s*/, "\t\tBATCH " + ($manualPostBatch.val()));
        });
      } else if (this === $manualPostNarr[0] && $manualPostNarr.val()) {
        $postInfoDisplay.val(function(index, oldVal) {
          return oldVal.replace(/\tNARRATION:.*\n/, "\tNARRATION:\t" + ($manualPostNarr.val()) + "\n");
        });
      }
      return checkAndEnableSubmitBtn();
    }
  }, '.manual-post-rqd');
  $manualPostForm.on({
    'change': function(evt) {
      if (this === $manualPostChker[0]) {
        if ($(this).prop('checked')) {
          $manualPostNarr.parents('.form-group').fadeIn();
          $manualPostBatch.parents('.form-group').fadeIn();
        } else {
          $manualPostNarr.val('').parents('.form-group').hide();
          $manualPostBatch.val('').parents('.form-group').hide();
        }
      }
      return checkAndEnableSubmitBtn();
    }
  }, 'input[type=checkbox]');
  manualPostChkBoxesValid = function() {
    return $('#id_update_manual_post_comment').prop('checked') || $('#id_create_manual_post').prop('checked');
  };
  okToPost = function() {
    if ($manualPostChker.prop('checked') && !/BATCH\s*\d{4}/.test($postInfoDisplay.val())) {
      $submitBtn.prop('disabled', true);
      return window.alert('You must specify a batch number.');
    }
    if (!acctIsValid) {
      $submitBtn.prop('disabled', true);
      return window.alert('Account is not valid');
    }
    if (!manualPostChkBoxesValid()) {
      return window.alert('You must select one of "update comment" or "post" or both.');
    }
    return true;
  };
  return $manualPostForm.submit(function(evt) {
    evt.preventDefault();
    if (okToPost()) {
      return $.ajax({
        url: clirecUploadUtils.getModalActionUrl('manual-postings'),
        data: $(this).serialize(),
        type: 'post',
        dataType: 'json',
        success: function(resp) {
          var id, _i, _len, _ref1, _results;
          setSuccessMessage(resp);
          _ref1 = resp.ids;
          _results = [];
          for (_i = 0, _len = _ref1.length; _i < _len; _i++) {
            id = _ref1[_i];
            _results.push(setRowComment(rows[id], resp.comment));
          }
          return _results;
        },
        error: function(resp) {
          return console.log(resp);
        }
      });
    }
  });
})();

$(window).trigger('init-autocomplete');
