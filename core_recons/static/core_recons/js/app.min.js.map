{"version":3,"sources":["app.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","resetForm","reset","form","el","controlCssClass","find","each","$","this","val","$setPristine","$setUntouched","CustomerModalCtrl","element","close","Branch","xhrErrorDisplay","closeModal","vm","customer","addCustomer","getBranch","branchParam","query","filter","$promise","createNewBranch","newBranch","newBranchedSavedSuccess","data","branch","dismissNewBranchForm","newBranchedSavedError","xhr","$save","$newBranchContainer","hide","$addCustomerFormCtrl","show","$addNewCustomerContainer","removeClass","prop","revealNewBranchForm","addClass","AddCustomerDirectiveCtrl","Customer","customerObj","newCustomerSaveSuccess","console","log","newCustomerSaveError","newCustomer","addCustomerDirective","ModalService","restrict","link","scope","elm","attributes","self","css","cursor","bind","showModal","template","controller","then","modal","dialog","dialogClass","minWidth","minHeight","angular","isObject","bindToController","rootCommons","app","setStaticPrefix","factory","$inject","directive","buildUrl","appName","fsPath","staticPrefix","run","$rootScope","addIconSrc","interpolateProviderConfig","$interpolateProvider","startSymbol","endSymbol","rootAppName","rootApp","$filter","$scope","$elm","attrs","ngModelCtrl","render","$viewValue","numberParser","viewValue","Number","replace","undefined","valueChangeListener","value","filteredVal","keypressListener","event","key","which","String","fromCharCode","$render","$parsers","push","require","model","upperCaseParser","toUpperCase","getCurrencies","$http","urls","searchQuery","get","currencyAPIUrl","params","code","response","$resource","url","appendToUrl","customerAPIUrl","put","method","branchAPIUrl","parseDate","aDate","test","Date","strftime","LetterOfCredit","letterOfCredit1APIUrl","XhrErrorDisplayCtrl","error","copy","status","messages","errorObj","modalHandler","title","inputs","services","searchLcDirective","attr","searchLcForm","searchParams","templateUrl","SearchLcDirectiveCtrl","getCustomer","customerName","name","getLcees","_","isEmpty","applicant","lcees","cssPath","config"],"mappings":"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","file":"app.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\n\tvar rootCommons = __webpack_require__(1)\n\n\tvar app = angular.module('rootApp', [\n\t  'ngRoute',\n\t  'ui.bootstrap',\n\t  'ngResource',\n\t  'ngAnimate',\n\t  'angularModalService'\n\t])\n\trootCommons.setStaticPrefix(app)\n\tapp.factory('resetForm', resetForm)\n\n\tfunction resetForm() {\n\n\t  /**\n\t   * Resets an angular form to its pristine and untouched state. Clears all the form controls.\n\t   *\n\t   * @param form - an angular form instance\n\t   * @param el - an angular element which wraps the form i.e the form is a descendant of the element\n\t   * @param controlCssClass - a unique class name for all controls of the form we wish to reset\n\t   */\n\t  function reset(form, el, controlCssClass) {\n\t    el.find('.' + controlCssClass).each(function() {\n\t      $(this).val('')\n\t    })\n\n\t    //form.$error = {}\n\t    form.$setPristine()\n\t    form.$setUntouched()\n\t  }\n\n\t  return reset\n\t}\n\n\tapp.controller('CustomerModalCtrl', CustomerModalCtrl)\n\n\tCustomerModalCtrl.$inject = ['resetForm', '$element', 'close', 'Branch', 'xhrErrorDisplay']\n\n\tfunction CustomerModalCtrl(resetForm, element, close, Branch, xhrErrorDisplay) {\n\t  var vm = this\n\t  vm.customer = {}\n\t  vm.close = closeModal\n\t  vm.reset = reset\n\t  vm.addCustomer = addCustomer\n\t  vm.getBranch = getBranch\n\t  vm.createNewBranch = createNewBranch\n\t  vm.revealNewBranchForm = revealNewBranchForm\n\t  vm.dismissNewBranchForm = dismissNewBranchForm\n\n\t  function closeModal() {\n\t    close()\n\t  }\n\n\t  function reset(form) {\n\t    vm.customer = {}\n\t    resetForm(form, element, 'form-control')\n\t  }\n\n\t  function addCustomer(customer) {\n\t    close(customer)\n\t  }\n\n\t  function getBranch(branchParam) {\n\t    return Branch.query({filter: branchParam}).$promise\n\t  }\n\n\t  function createNewBranch(newBranch) {\n\t    if (!newBranch) return\n\n\t    var branch = new Branch(newBranch)\n\t    branch.$save(newBranchedSavedSuccess, newBranchedSavedError)\n\n\t    function newBranchedSavedSuccess(data){\n\t      vm.customer.branch = data\n\t      dismissNewBranchForm()\n\t    }\n\n\t    function newBranchedSavedError(xhr){\n\t      xhrErrorDisplay(xhr);\n\t    }\n\t  }\n\n\t  var $addNewCustomerContainer = element.find('.add-new-customer-container')\n\t  var $addCustomerFormCtrl = element.find('.add-customer-form-control')\n\t  var $newBranchContainer = element.find('.new-branch-form-container')\n\n\t  function dismissNewBranchForm() {\n\t    $newBranchContainer.hide()\n\t    $addCustomerFormCtrl.show()\n\t    $addNewCustomerContainer.removeClass('ui-widget-overlay ui-front').find('.form-control').each(function() {\n\t      $(this).prop('disabled', false)\n\t    })\n\t  }\n\n\t  function revealNewBranchForm() {\n\t    $addCustomerFormCtrl.hide()\n\t    $newBranchContainer.show()\n\t    $addNewCustomerContainer.addClass('ui-widget-overlay ui-front').find('.form-control').each(function() {\n\t      $(this).prop('disabled', true)\n\t    })\n\t  }\n\t}\n\n\tapp.controller('AddCustomerDirectiveCtrl', AddCustomerDirectiveCtrl)\n\tAddCustomerDirectiveCtrl.$inject = ['Customer', 'xhrErrorDisplay']\n\tfunction AddCustomerDirectiveCtrl(Customer, xhrErrorDisplay) {\n\t  var vm = this\n\t  vm.customer = {}\n\t  vm.addCustomer = addCustomer\n\n\t  function addCustomer(customerObj) {\n\t    var newCustomer = new Customer(customerObj)\n\t    newCustomer.$save(newCustomerSaveSuccess, newCustomerSaveError)\n\n\t    function newCustomerSaveSuccess(data) {\n\t      console.log(data);\n\t    }\n\n\t    function newCustomerSaveError(xhr) {\n\t      xhrErrorDisplay(xhr);\n\t    }\n\t  }\n\t}\n\n\tapp.directive('addCustomer', addCustomerDirective)\n\taddCustomerDirective.$inject = ['ModalService']\n\tfunction addCustomerDirective(ModalService) {\n\t  return {\n\t    restrict: 'A',\n\t    link: function(scope, elm, attributes, self) {\n\t      elm\n\t        .css({cursor: 'pointer'})\n\t        .bind('click', function() {\n\t                ModalService.showModal({\n\t                  template: __webpack_require__(2),\n\t                  controller: 'CustomerModalCtrl as customerModal'\n\t                }).then(function(modal) {\n\t                  modal.element.dialog({\n\t                    dialogClass: 'no-close',\n\t                    modal: true,\n\t                    minWidth: 600,\n\t                    minHeight: 450\n\t                  })\n\n\t                  modal.close.then(function(customer) {\n\t                    if (customer && angular.isObject(customer)) {\n\t                      self.addCustomer(customer)\n\t                    }\n\t                  })\n\t                })\n\t              })\n\t    },\n\n\t    controller: 'AddCustomerDirectiveCtrl as addCustomer',\n\n\t    scope: {},\n\n\t    bindToController: true\n\t  }\n\t}\n\n\t__webpack_require__(3)\n\t__webpack_require__(4)\n\t__webpack_require__(5)\n\t__webpack_require__(7)\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\n\tvar interpolateProviderConfig = ['$interpolateProvider', function ($interpolateProvider) {\n\t  $interpolateProvider.startSymbol('{$');\n\t  $interpolateProvider.endSymbol('$}');\n\t}];\n\n\t/**\n\t * Takes a file system path to a file (most likely a template path) and returns the server compatible path\n\t *\n\t * @param {string} appName - the name of the django app\n\t * @param {string} fsPath - relative path to a file resource on disk. The path must be relative to appName/js directory\n\t *   path\n\t * @returns {string} - a server compatible path\n\t */\n\tfunction buildUrl(appName, fsPath) {\n\t  return staticPrefix + appName + '/js/' + fsPath\n\t}\n\n\t/**\n\t * sets the static root on an angular app - so we can use a variable in our views rather hard-coding the static root\n\t * value\n\t * @param {angular.module} app the angular module on which we wish to set the static root\n\t */\n\tfunction setStaticPrefix(app) {\n\t  app.run(['$rootScope', function ($rootScope) {\n\t    $rootScope.staticPrefix = staticPrefix\n\t    $rootScope.addIconSrc = staticPrefix + 'core_recons/css/images/icon_addposting.gif'\n\t  }])\n\t}\n\n\tmodule.exports = {\n\t  interpolateProviderConfig: interpolateProviderConfig,\n\n\t  buildUrl: buildUrl,\n\n\t  rootAppName: 'core_recons',\n\n\t  setStaticPrefix: setStaticPrefix\n\t}\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div id=\\\"add-customer\\\"><form novalidate=\\\"\\\" class=\\\"form-horizontal\\\" ng-submit=\\\"customerModal.addCustomer(customerModal.customer)\\\" name=\\\"customerModalForm\\\"><fieldset class=\\\"add-new-customer-container\\\" ng-form=\\\"\\\" name=\\\"newCustomerModalForm\\\" style=\\\"position: relative;padding: 7px;\\\"><div class=\\\"form-group\\\"><label class=\\\"control-label col-md-4 col-lg-4 col-sm-4\\\" for=\\\"customer-name\\\">Customer Name</label><div class=\\\"col-md-8 col-lg-8 col-sm-8\\\"><input class=\\\"form-control\\\" min=\\\"3\\\" id=\\\"customer-name\\\" required=\\\"\\\" to-upper=\\\"\\\" ng-pattern=\\\"/.{3,}/\\\" ng-model=\\\"customerModal.customer.name\\\"></div></div><div class=\\\"form-group\\\"><label class=\\\"control-label col-md-4 col-lg-4 col-sm-4\\\" for=\\\"customer-id\\\">Customer ID</label><div class=\\\"col-md-8 col-lg-8 col-sm-8\\\"><input class=\\\"form-control\\\" id=\\\"customer-id\\\" maxlength=\\\"9\\\" ng-pattern=\\\"/^\\\\d{9}$/\\\" ng-model=\\\"customerModal.customer.customer_id\\\"></div></div><div class=\\\"form-group\\\"><label class=\\\"control-label col-md-4 col-lg-4 col-sm-4\\\" for=\\\"account-number\\\">Account Number</label><div class=\\\"col-md-8 col-lg-8 col-sm-8\\\"><input class=\\\"form-control\\\" id=\\\"account-number\\\" required=\\\"\\\" maxlength=\\\"10\\\" ng-model=\\\"customerModal.customer.account\\\" ng-pattern=\\\"/^\\\\d{10}$/\\\"></div></div><div class=\\\"form-group\\\"><label class=\\\"control-label col-md-4 col-lg-4 col-sm-4\\\" for=\\\"branch\\\">Branch</label><div class=\\\"col-md-8 col-lg-8 col-sm-8\\\"><div class=\\\"input-group\\\"><input class=\\\"form-control\\\" id=\\\"branch\\\" required=\\\"\\\" ng-model=\\\"customerModal.customer.branch\\\" typeahead-min-length=\\\"2\\\" typeahead=\\\"branch as branch.name for branch in customerModal.getBranch($viewValue)\\\"> <span class=\\\"input-group-addon add-new-branch-reveal\\\" ng-click=\\\"customerModal.revealNewBranchForm()\\\" style=\\\"cursor: pointer;\\\"><img ng-src=\\\"{$$root.addIconSrc$}\\\" alt=\\\"add-branch\\\"></span></div></div></div></fieldset><div class=\\\"new-branch-form-container\\\" ng-form=\\\"\\\" name=\\\"newBranchForm\\\" style=\\\"margin-left: 5%;display: none\\\"><h4>Add New Branch</h4><div class=\\\"form-group\\\"><label class=\\\"control-label col-md-4 col-lg-4 col-sm-4\\\" for=\\\"new-branch-name\\\">Branch Name</label><div class=\\\"col-md-8 col-lg-8 col-sm-8\\\"><input class=\\\"form-control\\\" id=\\\"new-branch-name\\\" ng-model=\\\"customerModal.newBranch.name\\\" to-upper=\\\"\\\"></div></div><div class=\\\"form-group\\\"><label class=\\\"control-label col-md-4 col-lg-4 col-sm-4\\\" for=\\\"new-branch-code\\\">Branch Code</label><div class=\\\"col-md-3 col-lg-3 col-sm-3\\\"><input class=\\\"form-control\\\" id=\\\"new-branch-code\\\" ng-model=\\\"customerModal.newBranch.code\\\" maxlength=\\\"3\\\" ng-pattern=\\\"/^\\\\d{3}$/\\\"></div><div class=\\\"col-md-5 col-lg-5 col-sm-5\\\"><button class=\\\"btn btn-info\\\" type=\\\"button\\\" ng-disabled=\\\"newBranchForm.$invalid\\\" ng-click=\\\"customerModal.createNewBranch(customerModal.newBranch)\\\">Add Branch</button> <button class=\\\"btn btn-default new-branch-form-dismiss-btn\\\" type=\\\"button\\\" ng-click=\\\"customerModal.dismissNewBranchForm(customerModal.newBranch)\\\">Dismiss</button></div></div></div><div class=\\\"row add-customer-form-control\\\"><div class=\\\"col-md-4 col-lg-4 col-sm-4\\\" style=\\\"text-align: left\\\"><span class=\\\"btn btn-default\\\" ng-click=\\\"customerModal.reset(customerModalForm)\\\">Reset</span></div><div class=\\\"col-md-4 col-lg-4 col-sm-4\\\" style=\\\"text-align: center\\\"><button type=\\\"submit\\\" class=\\\"btn btn-info\\\" ng-disabled=\\\"newCustomerModalForm.$invalid\\\">Add Customer</button></div><div class=\\\"col-md-4 col-lg-4 col-sm-4\\\" style=\\\"text-align: right\\\"><span class=\\\"btn btn-default\\\" ng-click=\\\"customerModal.close()\\\">Close</span></div></div></form></div>\";\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\tvar rootApp = angular.module('rootApp')\n\n\trootApp.directive('numberFormat', ['$filter', function ($filter) {\n\n\t  function link($scope, $elm, attrs, ngModelCtrl) {\n\n\t    // called when model is updated directly on the scope\n\t    function render() {\n\t      $elm.val($filter('number')(ngModelCtrl.$viewValue, 2));\n\t    }\n\n\t    ngModelCtrl.$render = render;\n\n\t    // called when the model is updated in the input box\n\t    function numberParser(viewValue) {\n\t      return viewValue ? Number(viewValue.replace(/,/g, '')) : undefined;\n\t    }\n\n\t    ngModelCtrl.$parsers.push(numberParser);\n\n\t    //called on focusout event\n\t    function valueChangeListener() {\n\t      var value, filteredVal;\n\t      value = $elm.val();\n\n\t      if (!value) {\n\t        return;\n\t      }\n\n\t      value = $elm.val().replace(/,/g, '');\n\t      filteredVal = $filter('number')(value, 2);\n\t      $elm.val(filteredVal);\n\t    }\n\n\t    $elm.bind('focusout', valueChangeListener);\n\n\t    function keypressListener(event) {\n\t      var key;\n\t      key = event.which;\n\n\t      // If the keys include the CTRL, SHIFT, ALT, or META keys, or the arrow keys, do nothing.\n\t      // This lets us support copy and paste too\n\t      if (key === 0 || key === 8 || (15 < key && key < 19) || (37 <= key && key <= 40)) {\n\t        return;\n\t      }\n\t      // ignore all other keys which we do not need\n\t      if (String.fromCharCode(key) !== ',' &&\n\t        String.fromCharCode(key) !== '.' && !(48 <= key && key <= 57)) {\n\t        return;\n\t      }\n\t    }\n\n\t    $elm.bind('keypress', keypressListener);\n\t  }\n\n\t  return {require: 'ngModel', link: link, restrict: 'A'};\n\t}]);\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\n\tvar rootApp = angular.module('rootApp');\n\trootApp.directive('toUpper', [function () {\n\t  function link($scope, $elm, attrs, model) {\n\n\t    function upperCaseParser(viewValue) {\n\t      return viewValue ? viewValue.toUpperCase() : undefined;\n\t    }\n\n\t    model.$parsers.push(upperCaseParser);\n\n\t    $elm.bind('focusout', function () {\n\n\t      var value;\n\t      value = $elm.val();\n\t      $elm.val(value.toUpperCase());\n\t    });\n\t  }\n\n\t  return {\n\t    require: 'ngModel',\n\t    link: link,\n\t    restrict: 'A'\n\t  };\n\t}]);\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\n\tvar services = angular.module('rootApp')\n\n\tservices.factory('getCurrencies', getCurrencies)\n\tgetCurrencies.$inject = ['$http', 'urls'];\n\tfunction getCurrencies($http, urls) {\n\t  return function(searchQuery) {\n\t    return $http.get(urls.currencyAPIUrl, {\n\t      params: {code: searchQuery}\n\t    }).then(function(response) {\n\t      return response.data\n\t    })\n\t  }\n\t}\n\n\tservices.factory('Customer', Customer)\n\tCustomer.$inject = ['$resource', 'urls']\n\tfunction Customer($resource, urls) {\n\t  var url = appendToUrl(urls.customerAPIUrl, ':id')\n\t  return $resource(url, {id: '@id'}, {\n\t      'put': {\n\t        method: 'PUT'\n\t      }\n\t    }\n\t  )\n\t}\n\n\n\tservices.factory('Branch', Branch)\n\tBranch.$inject = ['$resource', 'urls']\n\tfunction Branch($resource, urls) {\n\t  var url = appendToUrl(urls.branchAPIUrl, ':id')\n\t  return $resource(url, {id: '@id'}, {\n\t      'put': {\n\t        method: 'PUT'\n\t      }\n\t    }\n\t  )\n\t}\n\n\tservices.factory('parseDate', parseDate);\n\tfunction parseDate() {\n\t  return function(aDate) {\n\t    //bid date is a date string and not datetime\n\t    if ((typeof aDate === 'string') && /\\d{4}-\\d{2}-\\d{2}/.test(aDate)) {\n\t      return aDate;\n\t    } else if (aDate instanceof Date) {\n\t      return aDate.strftime('%Y-%m-%d');\n\t    }\n\n\t    return null;\n\t  };\n\t}\n\n\tservices.factory('LetterOfCredit', LetterOfCredit);\n\tLetterOfCredit.$inject = ['$resource', 'urls'];\n\tfunction LetterOfCredit($resource, urls) {\n\t  var url = appendToUrl(urls.letterOfCredit1APIUrl, ':id');\n\t  return $resource(url, {id: '@id'}, {\n\t      'put': {\n\t        method: 'PUT'\n\t      }\n\t    }\n\t  )\n\t}\n\n\tservices.controller('XhrErrorDisplayCtrl', XhrErrorDisplayCtrl)\n\tservices.factory('xhrErrorDisplay', xhrErrorDisplay);\n\n\tXhrErrorDisplayCtrl.$inject = ['$scope', 'error']\n\n\tfunction XhrErrorDisplayCtrl($scope, error) {\n\t  error = angular.copy(error);\n\n\t  console.log(error);//TODO: remove console logging\n\n\t  if (error.status === 400) {\n\t    error.messages = error.data;\n\t  }\n\t  $scope.error = error;\n\t}\n\n\txhrErrorDisplay.$inject = ['ModalService'];\n\n\tfunction xhrErrorDisplay(ModalService) {\n\t  return function handleError(errorObj) {\n\t    ModalService.showModal({\n\t      template: __webpack_require__(6),\n\t      controller: 'XhrErrorDisplayCtrl',\n\t      inputs: {error: errorObj}\n\t    }).then(modalHandler);\n\n\t    function modalHandler(modal) {\n\t      modal.element.dialog({\n\t        modal: true,\n\t        dialogClass: 'no-close',\n\t        title: 'Error ' + errorObj.status\n\t      });\n\t    }\n\t  }\n\t}\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"xhr-error\\\">\\n  <h2>Error {$error.status$}</h2>\\n  <h4>{$error.statusText$}</h4>\\n  <ol>\\n    <li ng-repeat=\\\"msg in error.messages\\\">\\n      <!--:TODO - display the key -->\\n      {$msg$}\\n    </li>\\n  </ol>\\n</div>\\n\";\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\n\t/*jshint camelcase:false*/\n\n\tvar rootCommons = __webpack_require__(1)\n\n\tvar app = angular.module('rootApp.search_lc', ['rootApp'])\n\tapp.config(rootCommons.interpolateProviderConfig)\n\trootCommons.setStaticPrefix(app)\n\n\tapp.directive('searchLc', searchLcDirective)\n\n\tsearchLcDirective.$inject = ['resetForm']\n\n\tfunction searchLcDirective(resetForm) {\n\n\t  function link(scope, el, attr, controller) {\n\t    function reset(searchLcForm) {\n\t      controller.searchParams = {}\n\n\t      if (searchLcForm) {\n\t        resetForm(searchLcForm, el, 'form-control')\n\t      }\n\t    }\n\n\t    controller.reset = reset\n\n\t    controller.reset()\n\t  }\n\n\t  return {\n\t    restrict: 'E',\n\n\t    scope: {},\n\n\t    bindToController: true,\n\n\t    templateUrl: rootCommons.buildUrl(rootCommons.rootAppName, 'search-lc/search-lc.html'),\n\n\t    controller: 'SearchLcDirectiveCtrl as searchLc',\n\n\t    link: link\n\t  }\n\t}\n\n\tapp.controller('SearchLcDirectiveCtrl', SearchLcDirectiveCtrl)\n\tSearchLcDirectiveCtrl.$inject = ['Customer', 'LetterOfCredit']\n\tfunction SearchLcDirectiveCtrl(Customer, LetterOfCredit) {\n\t  var vm = this;\n\n\t  vm.cssPath = rootCommons.buildUrl(rootCommons.rootAppName, 'search-lc/search-lc.min.css')\n\t  vm.lcees = []\n\t  vm.searchParams = {}\n\t  vm.getCustomer = getCustomer\n\t  vm.getLcees = getLcees\n\n\t  function getCustomer(customerName) {\n\t    return Customer.query({name: customerName}).$promise\n\t  }\n\n\t  function getLcees(searchParams) {\n\t    if (_.isEmpty(searchParams)) return //:TODO - tell user that search query matches nothing on server\n\n\t    if (searchParams.applicant) searchParams.applicant = searchParams.applicant.name\n\n\t    vm.lcees = LetterOfCredit.query(searchParams)\n\t    console.log(vm.lcees)\n\t  }\n\t}\n\n\n/***/ }\n/******/ ]);"],"sourceRoot":"/source/"}